server:
  port: ${INDEXER_SERVER_PORT:8082}

spring:
  config:
    import:
      - "optional:file:.env[.properties]"
  datasource:
    url: jdbc:postgresql://${READ_DB_HOST:localhost}:${READ_DB_PORT:5434}/${READ_DB_NAME:omnibox}?currentSchema=public&sslmode=disable
    username: ${READ_DB_USER:omnibox}
    password: ${READ_DB_PASSWORD:omnibox}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 500   # must be >= 250ms
  flyway:
    enabled: true
  kafka:
    # Use localhost:9092 when running app on host; use kafka:9092 when running the app in Docker
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: search-indexer
      enable-auto-commit: false
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 500
      fetch-min-size: 524288      # 512 KB
      fetch-max-wait: 200         # ms
      properties:
        isolation.level: read_committed
    listener:
      ack-mode: BATCH
      concurrency: 3
      missing-topics-fatal: false
    properties:
      client.id: indexer-search-${HOSTNAME:local}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

logging:
  level:
    com.github.dimitryivaniuta.gateway: INFO
