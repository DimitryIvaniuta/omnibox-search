plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.graphql-java:graphql-java-extended-scalars:24.0'

    runtimeOnly 'org.postgresql:postgresql:42.7.8'

    implementation 'com.graphql-java:graphql-java:24.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    compileOnly 'org.projectlombok:lombok:1.18.42'
    annotationProcessor 'org.projectlombok:lombok:1.18.42'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //testImplementation 'org.springframework:spring-webflux' // for WebTestClient
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

tasks.register('printSchema', JavaExec) {
    group = "graphql"
    description = "Export GraphQL SDL to build/schema.graphqls"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.github.dimitryivaniuta.tools.searchschema.SchemaExporterMain'
}